{"ast":null,"code":"import { DELETE, FETCH_ALL, FETCH_POST, LIKE, UPDATE, CREATE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, COMMENT } from \"../constants/actionTypes\";\nexport default (function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    isLoading: true,\n    posts: []\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    case COMMENT:\n      return { ...state,\n        posts: state.posts.map(post => {\n          // change the post that just received a comment\n          if (post._id === action.payload._id) return action.payload;\n          return post; // return all the other posts normally\n        })\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["DELETE","FETCH_ALL","FETCH_POST","LIKE","UPDATE","CREATE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","COMMENT","state","isLoading","posts","action","type","payload","post","data","currentPage","numberOfPages","map","_id","filter"],"sources":["E:/Memories_Project/client/src/reducers/posts.js"],"sourcesContent":["import {\n  DELETE,\n  FETCH_ALL,\n  FETCH_POST,\n  LIKE,\n  UPDATE,\n  CREATE,\n  FETCH_BY_SEARCH,\n  START_LOADING,\n  END_LOADING,\n  COMMENT,\n} from \"../constants/actionTypes\";\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n\n    case END_LOADING:\n      return { ...state, isLoading: false };\n\n    case FETCH_BY_SEARCH:\n      return {\n        ...state,\n        posts: action.payload,\n      };\n\n    case FETCH_POST:\n      return {\n        ...state,\n        post: action.payload,\n      };\n\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n\n    case UPDATE:\n    case LIKE:\n      return {\n        ...state,\n        posts: state.posts.map((post) => (post._id === action.payload._id ? action.payload : post)),\n      };\n\n    case DELETE:\n      return { ...state, posts: state.posts.filter((post) => post._id !== action.payload) };\n\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n          // change the post that just received a comment\n          if (post._id === action.payload._id) return action.payload;\n\n          return post; // return all the other posts normally\n        }),\n      };\n\n    default:\n      return state;\n  }\n};\n"],"mappings":"AAAA,SACEA,MADF,EAEEC,SAFF,EAGEC,UAHF,EAIEC,IAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,eAPF,EAQEC,aARF,EASEC,WATF,EAUEC,OAVF,QAWO,0BAXP;AAaA,gBAAe,YAAoD;EAAA,IAAnDC,KAAmD,uEAA3C;IAAEC,SAAS,EAAE,IAAb;IAAmBC,KAAK,EAAE;EAA1B,CAA2C;EAAA,IAAXC,MAAW;;EACjE,QAAQA,MAAM,CAACC,IAAf;IACE,KAAKP,aAAL;MACE,OAAO,EAAE,GAAGG,KAAL;QAAYC,SAAS,EAAE;MAAvB,CAAP;;IAEF,KAAKH,WAAL;MACE,OAAO,EAAE,GAAGE,KAAL;QAAYC,SAAS,EAAE;MAAvB,CAAP;;IAEF,KAAKL,eAAL;MACE,OAAO,EACL,GAAGI,KADE;QAELE,KAAK,EAAEC,MAAM,CAACE;MAFT,CAAP;;IAKF,KAAKb,UAAL;MACE,OAAO,EACL,GAAGQ,KADE;QAELM,IAAI,EAAEH,MAAM,CAACE;MAFR,CAAP;;IAKF,KAAKd,SAAL;MACE,OAAO,EACL,GAAGS,KADE;QAELE,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeE,IAFjB;QAGLC,WAAW,EAAEL,MAAM,CAACE,OAAP,CAAeG,WAHvB;QAILC,aAAa,EAAEN,MAAM,CAACE,OAAP,CAAeI;MAJzB,CAAP;;IAOF,KAAKd,MAAL;MACE,OAAO,EAAE,GAAGK,KAAL;QAAYE,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;MAAnB,CAAP;;IAEF,KAAKX,MAAL;IACA,KAAKD,IAAL;MACE,OAAO,EACL,GAAGO,KADE;QAELE,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBJ,IAAD,IAAWA,IAAI,CAACK,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDC,IAA9E;MAFF,CAAP;;IAKF,KAAKhB,MAAL;MACE,OAAO,EAAE,GAAGU,KAAL;QAAYE,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBN,IAAD,IAAUA,IAAI,CAACK,GAAL,KAAaR,MAAM,CAACE,OAAjD;MAAnB,CAAP;;IAEF,KAAKN,OAAL;MACE,OAAO,EACL,GAAGC,KADE;QAELE,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBJ,IAAD,IAAU;UAC/B;UACA,IAAIA,IAAI,CAACK,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAAhC,EAAqC,OAAOR,MAAM,CAACE,OAAd;UAErC,OAAOC,IAAP,CAJ+B,CAIlB;QACd,CALM;MAFF,CAAP;;IAUF;MACE,OAAON,KAAP;EApDJ;AAsDD,CAvDD"},"metadata":{},"sourceType":"module"}