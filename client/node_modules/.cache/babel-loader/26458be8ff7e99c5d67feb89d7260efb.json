{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, CREATE, DELETE, LIKE, UPDATE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, COMMENT } from \"../constants/actionTypes\";\nimport * as api from \"../api\"; // ACTION CREATORS\n\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const createPost = (post, history) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    history.push(`/posts/${data._id}`);\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const commentPost = (value, id) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.comment(value, id); // {comments: ['comment]}\n\n    dispatch({\n      type: COMMENT,\n      payload: data\n    });\n    return data === null || data === void 0 ? void 0 : data.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"names":["FETCH_ALL","FETCH_POST","CREATE","DELETE","LIKE","UPDATE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","COMMENT","api","getPosts","page","dispatch","type","data","currentPage","numberOfPages","fetchPosts","payload","error","console","log","getPostsBySearch","searchQuery","fetchPostsBySearch","createPost","post","history","push","_id","getPost","id","fetchPost","message","updatePost","deletePost","likePost","commentPost","value","comment","comments"],"sources":["E:/Memories_Project/client/src/actions/posts.js"],"sourcesContent":["import {\n  FETCH_ALL,\n  FETCH_POST,\n  CREATE,\n  DELETE,\n  LIKE,\n  UPDATE,\n  FETCH_BY_SEARCH,\n  START_LOADING,\n  END_LOADING,\n  COMMENT,\n} from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n\n// ACTION CREATORS\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const {\n      data: { data, currentPage, numberOfPages },\n    } = await api.fetchPosts(page);\n\n    dispatch({ type: FETCH_ALL, payload: { data, currentPage, numberOfPages } });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const {\n      data: { data },\n    } = await api.fetchPostsBySearch(searchQuery);\n\n    dispatch({ type: FETCH_BY_SEARCH, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const createPost = (post, history) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n    dispatch({ type: CREATE, payload: data });\n\n    history.push(`/posts/${data._id}`);\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPost(id);\n    dispatch({ type: FETCH_POST, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const commentPost = (value, id) => async (dispatch) => {\n  try {\n    const { data } = await api.comment(value, id); // {comments: ['comment]}\n    dispatch({ type: COMMENT, payload: data });\n    return data?.comments;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}